/*
 * Copyright (c) 2020 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 * edited with https://nickcoutsos.github.io/keymap-editor/
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&left_encoder { steps = <36>; };

&right_encoder { steps = <36>; };

&sensors { triggers-per-rotation = <18>; };

&mt {
    flavor = "tap-unless-interrupted";
    retro-tap;
    tapping-term-ms = <100>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>, <&kp BSLH>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp EXCL>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp EQUAL>;
        };

        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYERS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&to 1>, <&to 2>, <&to 3>;
        };

        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GRAVE_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };

        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SQT_MINUS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp MINUS>;
        };

        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_OUT_TOG_BT_CLR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&out OUT_TOG>, <&bt BT_CLR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC,`  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   [,],\  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   ',-      |
            // | SHFT-CAPS |  Z  |  X  |  C   |  V   |  B   | DEFALT  | NUM_L  |  | FUNC_L    | COLMAK  |  N   |  M    |  ,    |  . ! |   /   | SHFT-CAPS |
            //                     | LGUI| LCTRL| LALT |  LGUI   |   SPACE |  |  BSPC   |  SPACE  | DEL  | RET   | LGUI |
            // ---------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&td5     &kp Q             &kp W  &kp E     &kp R      &kp T                                               &kp Y    &kp U    &kp I      &kp O  &kp P                      &td0
&kp TAB  &mt LEFT_SHIFT A  &kp S  &kp D     &lt 2 F    &kp G                                               &kp H    &lt 2 J  &kp K      &kp L  &mt RIGHT_SHIFT SEMICOLON  &td6
&td3     &kp Z             &kp X  &kp C     &kp V      &kp B     &to 0     &to 1      &to 2     &to 3      &kp N    &kp M    &kp COMMA  &td1   &kp FSLH                   &td3
                                  &kp LGUI  &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp BSPC  &kp SPACE  &kp DEL  &kp RET  &kp LGUI
            >;

            sensor-bindings = <
				&inc_dec_kp UP_ARROW DOWN_ARROW 
				&inc_dec_kp LEFT_ARROW RIGHT_ARROW 
            >;
        };

        num_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC,`   |  !  |  @  |  #   |  $   |  %   |                                                      |  ^   |  &    |  *    |  (   |   )  |  + |
            // |  TAB  |  1  |  2  |  3   |  4   |  5   |                                                      |  6   |  7    |  8    |  9   |   0  |   -  |
            // | SHFT-CAPS |  {  |  }  |  [   |  ]   |  \   | DEFALT  | NUM_L  |  | FUNC_L    | COLMAK  |  :   |  *    |  ,    |  .   |   /   |   =  |
            //                     | LGUI| LCTRL| LALT |  LGUI   |   SPACE |  |  BSPC   |  SPACE  | DEL  | RET   | LGUI |
            // ---------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&td5     &kp EXCL                 &kp AT    &kp POUND  &kp DLLR   &kp PRCNT                                            &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR            &kp PLUS
&kp TAB  &mt LEFT_SHIFT NUMBER_1  &kp N2    &kp N3     &kp N4     &kp N5                                               &kp N6     &kp N7    &kp N8     &kp N9    &mt RIGHT_SHIFT N0  &kp MINUS
&td3     &kp LBRC                 &kp RBRC  &kp LBKT   &kp RBKT   &kp BSLH   &to 0     &to 1      &to 2     &to 3      &kp COLON  &kp STAR  &kp COMMA  &kp DOT   &kp FSLH            &kp EQUAL
                                            &kp LGUI   &kp LCTRL  &kp LALT   &kp LGUI  &kp SPACE  &kp BSPC  &kp SPACE  &kp DEL    &kp RET   &kp LGUI
            >;

            sensor-bindings = <
				&inc_dec_kp UP_ARROW DOWN_ARROW 
				&inc_dec_kp LEFT_ARROW RIGHT_ARROW 
            >;
        };

        nav_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC,`       |  F1 |  F2 |  F3  |  F4  |  F5  |                                                |  PG_UP  |  HOME |  UP   |  END  |   C_VOL_UP | BSPC  |
            // |  TAB      |  F6 |  F7 |  F8  |  F9  |  F10 |                                                |  PG_DN  |  LEFT |  DOWN | RIGHT |   C_VOL_DN |   PSCRN  |
            // | SHFT-CAPS |  BT0  |  BT1  |  BT2   |  BT3   |  OUT_TOG,BT_CLR   | DEFALT  | NUM_L  |  | FUNC_L    | COLMAK  |  C_PAUSE   |  C_PREV    |  C_PLAY    |  C_NEXT   |   C_MUTE |  SHFT-CAPS  |
            //                            | LGUI| LCTRL| LALT |  LGUI   |   SPACE |  |  BSPC   |  SPACE  | DEL  | RET   | LGUI |
            // ---------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&td5     &kp F1             &kp F2        &kp F3        &kp F4        &kp F5                                              &kp PG_UP    &kp HOME    &kp UP      &kp END     &kp C_VOL_UP                   &kp BSPC
&kp TAB  &mt LEFT_SHIFT F6  &kp F7        &kp F8        &kp F9        &kp F10                                             &kp PG_DN    &kp LEFT    &kp DOWN    &kp RIGHT   &mt RIGHT_SHIFT C_VOLUME_DOWN  &kp PSCRN
&td3     &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &td7      &to 0     &to 1      &to 2     &to 3      &kp C_PAUSE  &kp C_PREV  &kp C_PLAY  &kp C_NEXT  &kp C_MUTE                     &td3
                                          &kp LGUI      &kp LCTRL     &kp LALT  &kp LGUI  &kp SPACE  &kp BSPC  &kp SPACE  &kp DEL      &kp RET     &kp LGUI
            >;

            sensor-bindings = <
				&inc_dec_kp UP_ARROW DOWN_ARROW 
				&inc_dec_kp LEFT_ARROW RIGHT_ARROW 
            >;
        };

        colmak_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC,`  |  q  |  W  |  F   |  P   |  B   |                                          |  J   |  L    |  U    |  Y   |   ;   |   [,],\  |
            // |  TAB  |  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |   ',-      |
            // | SHFT-CAPS |  Z  |  X  |  C   |  D   |  V   | DEFALT  | NUM_L  |  | FUNC_L    | COLMAK  |  K   |  H    |  ,    |  . ! |   /   | SHFT-CAPS |
            //                     | LGUI| LCTRL| LALT |  LGUI   |   SPACE |  |  BSPC   |  SPACE  | DEL  | RET   | LGUI |
            // ---------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&td5     &kp Q             &kp W  &kp F     &kp P      &kp B                                               &kp J    &kp L    &kp U      &kp Y  &kp SEMI           &td0
&kp TAB  &mt LEFT_SHIFT A  &kp R  &kp S     &lt 2 T    &kp G                                               &kp M    &lt 2 N  &kp E      &kp I  &mt RIGHT_SHIFT O  &td6
&td3     &kp Z             &kp X  &kp C     &kp D      &kp V     &to 0     &to 1      &to 2     &to 3      &kp K    &kp H    &kp COMMA  &td1   &kp FSLH           &td3
                                  &kp LGUI  &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp BSPC  &kp SPACE  &kp DEL  &kp RET  &kp LGUI
            >;

            sensor-bindings = <
				&inc_dec_kp UP_ARROW DOWN_ARROW 
				&inc_dec_kp LEFT_ARROW RIGHT_ARROW 
            >;
        };
    };
};
